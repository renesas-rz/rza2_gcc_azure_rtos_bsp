/**********************************************************************************************************************
 * DISCLAIMER
 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
 * applicable laws, including copyright laws.
 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO
 * THIS SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
 * following link:
 * http://www.renesas.com/disclaimer
 *
 * Copyright (C) 2019 Renesas Electronics Corporation. All rights reserved.
 *********************************************************************************************************************/
/**********************************************************************************************************************
 * File Name    : r_adc_drv_sc_cfg.h
 * Version      : 1.0
 * Description  : ADC low layer driver configuration header, part of the low layer driver.
 *                This file uses the same name for any low layer driver that is supported by a compatible high layer
 *                driver.
 *                File is included in the high layer driver to allow the low layer driver to be swapped at build time
 *                and share the same high layer code.
 *********************************************************************************************************************/

/******************************************************************************************************************//**
 * @ingroup Interface_Library
 * @defgroup GPIO_SC_IF SC INTC API Interface
 * @brief Interface between Smart Configurator and the INTC module.
 *
 * @section GPIO_DRIVER_SC_SUMMARY Summary
 * @brief The interface allows Smart Configurator (SC) to manage the configuration of the INTC driver.
 * Do not edit this file if using SC
 *
 * @section RZA1H_GPIO_SC_IF_API_LIMITATIONS Known Limitations
 * DMA startup not implemented at this time
 *
 * @section RZA1H_GPIO_SC_IF_API_INSTANCES Known Implementations
 * @ref NONE_YET
 *
 * @section RZA1H_GPIO_SC_IF_API_RELATED Related modules
 * @ingroup RZA1H_SC_CFG
 * See also:
 * @ref RZA1H_RSK_INTC,
 * @{
 *********************************************************************************************************************/

#include "compiler_settings.h"

#ifndef R_ADC_INC_R_ADC_DRV_SC_CFG_H_
#define R_ADC_INC_R_ADC_DRV_SC_CFG_H_

/**********************************************************************************************************************
 Externs
 *********************************************************************************************************************/

#if defined(__cplusplus)
extern "C" {
#endif
extern void adcCallback(e_r_drv_adc_callback_reason_t reason);
#if defined(__cplusplus)
}
#endif

/**********************************************************************************************************************
 Macro definitions
 *********************************************************************************************************************/

/* Maximum number of modules that can be granted simultaneous access to this driver  */
#define  R_CFG_ADC_DRV_MAXIMUM_ACCESS_PRV    (1)

/**********************************************************************************************************************
 Typedefs
 *********************************************************************************************************************/


/**
 * @section ADC_SC_TABLE Smart configurator settings table.
 */
#if FUTURE_USE_INTENTIONALLY_DISABLED

static const st_r_drv_adc_sc_config_t ADC_SC_TABLE_SC[] =
{
    /* This code is auto-generated. Do not edit manually */
    { 
        {
        }, 
        {
            &GPIO_SC_TABLE_adc0[0], 
            sizeof(GPIO_SC_TABLE_adc0)/sizeof(st_r_drv_gpio_sc_config_t), 
        }
    },
    /* End of modification */
};

#endif /* FUTURE_USE_INTENTIONALLY_DISABLED */

/**
 * @section R_ADC_SC_CFG_98_TABLE Smart Configurator settings table
 */
static const st_r_drv_adc_sc_config_t ADC_SC_TABLE =
{
    ADC_RESOLUTION_12,                  /*!< ADC conversion resolution */
    ADC_ALIGN_LEFT,                     /*!< ADC conversion value alignment */
    ADC_SCAN_MODE_SINGLE,               /*!< ADC scan mode */
    NULL,                               /*!< set ADC conversion complete callback function (can be NULL) */
    INTC_PRIORITY_20,                   /*!< sets the conversion complete interrupt priority */

    ADC_TRIGGER_DISABLED,               /*!< ADC channel 0 trigger source */
    0,                                  /*!< ADC channel 0 sample time */
    ADC_TRIGGER_DISABLED,               /*!< ADC channel 1 trigger source */
    0,                                  /*!< ADC channel 1 sample time */
    ADC_TRIGGER_DISABLED,               /*!< ADC channel 2 trigger source */
    0,                                  /*!< ADC channel 2 sample time */
    ADC_TRIGGER_DISABLED,               /*!< ADC channel 3 trigger source */
    0,                                  /*!< ADC channel 3 sample time */
    ADC_TRIGGER_DISABLED,               /*!< ADC channel 4 trigger source */
    0,                                  /*!< ADC channel 4 sample time */
    ADC_TRIGGER_DISABLED,               /*!< ADC channel 5 trigger source */
    0,                                  /*!< ADC channel 5 sample time */
    ADC_TRIGGER_DISABLED,               /*!< ADC channel 6 trigger source */
    0,                                  /*!< ADC channel 6 sample time */
    ADC_TRIGGER_DISABLED,               /*!< ADC channel 7 trigger source */
    0                                   /*!< ADC channel 7 sample time */
};

#endif /* R_ADC_INC_R_ADC_DRV_SC_CFG_H_ */

/******************************************************************************************************************//**
 * @} (end addtogroup ADC_SC_IF)
 *********************************************************************************************************************/

/**********************************************************************************************************************
 End Of File
 *********************************************************************************************************************/
